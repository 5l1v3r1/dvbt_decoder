# -*- coding: utf-8 -*-

import numpy as np
import generate_viterbi_core_c as gen_vit_core

def test_initialise_arrays():
    exp_expected_measurement = np.array([[False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [ True, False, False,  True],
                                         [ True,  True, False, False],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True],
                                         [False,  True,  True, False],
                                         [False, False,  True,  True]], 
                                dtype=bool)
       
    exp_prev_states = np.array([[  0.,   1.],
                                [  2.,   3.],
                                [  4.,   5.],
                                [  6.,   7.],
                                [  8.,   9.],
                                [ 10.,  11.],
                                [ 12.,  13.],
                                [ 14.,  15.],
                                [ 16.,  17.],
                                [ 18.,  19.],
                                [ 20.,  21.],
                                [ 22.,  23.],
                                [ 24.,  25.],
                                [ 26.,  27.],
                                [ 28.,  29.],
                                [ 30.,  31.],
                                [ 32.,  33.],
                                [ 34.,  35.],
                                [ 36.,  37.],
                                [ 38.,  39.],
                                [ 40.,  41.],
                                [ 42.,  43.],
                                [ 44.,  45.],
                                [ 46.,  47.],
                                [ 48.,  49.],
                                [ 50.,  51.],
                                [ 52.,  53.],
                                [ 54.,  55.],
                                [ 56.,  57.],
                                [ 58.,  59.],
                                [ 60.,  61.],
                                [ 62.,  63.],
                                [  0.,   1.],
                                [  2.,   3.],
                                [  4.,   5.],
                                [  6.,   7.],
                                [  8.,   9.],
                                [ 10.,  11.],
                                [ 12.,  13.],
                                [ 14.,  15.],
                                [ 16.,  17.],
                                [ 18.,  19.],
                                [ 20.,  21.],
                                [ 22.,  23.],
                                [ 24.,  25.],
                                [ 26.,  27.],
                                [ 28.,  29.],
                                [ 30.,  31.],
                                [ 32.,  33.],
                                [ 34.,  35.],
                                [ 36.,  37.],
                                [ 38.,  39.],
                                [ 40.,  41.],
                                [ 42.,  43.],
                                [ 44.,  45.],
                                [ 46.,  47.],
                                [ 48.,  49.],
                                [ 50.,  51.],
                                [ 52.,  53.],
                                [ 54.,  55.],
                                [ 56.,  57.],
                                [ 58.,  59.],
                                [ 60.,  61.],
                                [ 62.,  63.]])
  
    expected_measurement, prev_states = gen_vit_core.initialise_arrays()
    
    assert np.alltrue(expected_measurement == exp_expected_measurement)
    assert np.alltrue(prev_states == exp_prev_states)
    
if __name__ == '__main__':
    test_initialise_arrays()
    
